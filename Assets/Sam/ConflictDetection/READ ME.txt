Hi Sam, this is a quick demo of how you could use a Trigger to detect conflicts instead of using spherecasting/overlapspheres

First I'll confuse and confound you with the layer situation: the drones are on the drone layer, as always.
This means the drones cannot collide with each other, but they can collide with everything else in the world.
The Conflict Detector, which is a child of the drone, has its own layer. This layer can ONLY collide with drones.
That way the conflict detector will only be triggered by drones and not buildings etc - although you can easily include that.

The conflict detector works thanks to Unity's OnTriggerEnter which is called automatically anything comes inside a collider
which is marked as Trigger and attached to the same gameObject as our script.

IMPORTANT: OnTriggerEnter requires a RigidBody component AND for the rigidbody to be set as Kinematic.

Sadly, the trigger will detect its own drone when it spawns. However, because this is only called when something ENTERS the
collider, we only see that conflict once. There are also calls for OnTriggerStay and OnTriggerExit if you want to use those.

The demo scene just shows the two drones detecting each other and then flying through each other. If you need help with this
please let me know!